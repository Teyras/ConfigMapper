<?xml version="1.0" encoding="UTF-8"?>
<project name="dpp" default="all">


  <!-- Compiler options -->

  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>

  <!-- Modules -->


  <!-- Module ConfigMapper -->

  <dirname property="module.configmapper.basedir" file="${ant.file}"/>



  <property name="compiler.args.configmapper" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>

  <property name="configmapper.output.dir" value="${module.configmapper.basedir}/out/production/ConfigMapper"/>
  <property name="configmapper.testoutput.dir" value="${module.configmapper.basedir}/out/test/ConfigMapper"/>

  <!-- JUnit report directory -->
  <property name="report.dir" value="${module.configmapper.basedir}/testsOutput"/>

  <!-- javadoc output directory -->
  <property name="doc.dir" value="${module.configmapper.basedir}/javadoc"/>

  <path id="configmapper.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="configmapper.module.production.classpath"/>

  <path id="configmapper.runtime.production.module.classpath">
    <pathelement location="${configmapper.output.dir}"/>
  </path>

  <path id="configmapper.module.classpath">
    <pathelement location="${configmapper.output.dir}"/>
  </path>

  <path id="configmapper.runtime.module.classpath">
    <pathelement location="${configmapper.testoutput.dir}"/>
    <pathelement location="${configmapper.output.dir}"/>
  </path>


  <patternset id="excluded.from.module.configmapper">
    <patternset refid="ignored.files"/>
  </patternset>

  <patternset id="excluded.from.compilation.configmapper">
    <patternset refid="excluded.from.module.configmapper"/>
  </patternset>

  <path id="configmapper.module.sourcepath">
    <dirset dir="${module.configmapper.basedir}">
      <include name="src"/>
    </dirset>
  </path>

  <path id="configmapper.module.test.sourcepath">
    <dirset dir="${module.configmapper.basedir}">
      <include name="tests"/>
    </dirset>
  </path>


  <target name="compile.module.configmapper" depends="compile.module.configmapper.production,compile.module.configmapper.tests" description="Compile module ConfigMapper"/>

  <target name="compile.module.configmapper.production" description="Compile module ConfigMapper; production classes">
    <mkdir dir="${configmapper.output.dir}"/>
    <javac destdir="${configmapper.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.configmapper}"/>
      <bootclasspath refid="configmapper.module.bootclasspath"/>
      <classpath refid="configmapper.module.production.classpath"/>
      <src refid="configmapper.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.configmapper"/>
    </javac>

    <copy todir="${configmapper.output.dir}">
      <fileset dir="${module.configmapper.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="compile.module.configmapper.tests" depends="compile.module.configmapper.production" description="compile module ConfigMapper; test classes" unless="skip.tests">
    <mkdir dir="${configmapper.testoutput.dir}"/>
    <javac destdir="${configmapper.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.configmapper}"/>
      <bootclasspath refid="configmapper.module.bootclasspath"/>
      <classpath refid="configmapper.module.classpath"/>
      <src refid="configmapper.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.configmapper"/>
    </javac>

    <copy todir="${configmapper.testoutput.dir}">
      <fileset dir="${module.configmapper.basedir}/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="clean.module.configmapper" description="cleanup module">
    <delete dir="${configmapper.output.dir}"/>
    <delete dir="${configmapper.testoutput.dir}"/>
    <delete dir="${report.dir}"/>
  </target>

  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>

  <target name="clean" depends="clean.module.configmapper" description="cleanup all"/>

  <target name="build.modules" depends="init, clean, compile.module.configmapper" description="build all modules"/>

  <target name="all" depends="build.modules" description="build all"/>

  <target name="test" depends="build.modules">

    <mkdir dir="${report.dir}"/>

    <junit printsummary="yes" haltonfailure="no" forkmode="perBatch" fork="no">

      <!--
          <classpath location="lib/junit-4.11.jar" />
          <classpath location="lib/hamcrest-core-1.3.jar" />

      -->


	<classpath location="${module.configmapper.basedir}/lib/junit.jar" />
	<classpath location="${module.configmapper.basedir}/lib/hamcrest-core.jar" />
      <classpath>
        <pathelement path="${configmapper.output.dir}" />
        <pathelement path="${configmapper.testoutput.dir}" />
      </classpath>

      <formatter type="xml" />
      <formatter type="plain" />
      <formatter type="brief" usefile="false" />

      <batchtest fork="no" todir="${report.dir}">
        <fileset dir="${module.configmapper.basedir}/tests">
          <include name="**/*Test*.java" />
          <exclude name="**/*$*.class"/>
        </fileset>
      </batchtest>

    </junit>
  </target>

  <target name="doc" depends="init" description="generate documentation">
	  <javadoc sourcepath="${module.configmapper.basedir}/src/" destdir="${doc.dir}" overview="${module.configmapper.basedir}/doc/overview.html"/>
  </target>
</project>
